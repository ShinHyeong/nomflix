{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","movieApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","aria-label","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","this","a","data","results","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abb47eaf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.495623d8.png\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    \"api_key\": \"c4abfb07d4ab729b79bc896442812916\",\r\n    \"language\": \"en-US\"\r\n  }\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) => api.get(`movie/${id}`, {\r\n    params: {\r\n      append_to_response: \"videos\"\r\n    }\r\n  }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) => api.get(`tv/${id}`, {\r\n    params: {\r\n      append_to_response: \"videos\"\r\n    }\r\n  }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  } \r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node), \r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({text, color}) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl}); \r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity .1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &: hover{\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n      transition: opacity .1s linear;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie=false}) => (\r\n  <Link to={isMovie? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image bgUrl={imageUrl? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n                     : require(\"../assets/noPosterSmall.png\")} />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n          ⭐\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length>18 ? `${title.substring(0,18)}...` : title}\r\n        </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({nowPlaying, upcoming, popular, error, loading}) => (\r\n<>\r\n  <Helmet>\r\n    <title>Movies | Nomflix</title>\r\n  </Helmet>\r\n  {loading? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n      </Helmet>\r\n      {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n          {nowPlaying.map(movie => (\r\n          <Poster \r\n            key={movie.id}\r\n            id={movie.id}\r\n            imageUrl={movie.poster_path} \r\n            title={movie.original_title}\r\n            rating={movie.vote_average}\r\n            year={movie.release_date && movie.release_date.substring(0,4)}\r\n            isMovie={true}\r\n          />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {upcoming && upcoming.length > 0 && (\r\n        <Section title=\"Upcoming Movies\">\r\n          {upcoming.map(movie =>(\r\n          <Poster \r\n            key={movie.id}\r\n            id={movie.id}\r\n            imageUrl={movie.poster_path} \r\n            title={movie.original_title}\r\n            rating={movie.vote_average}\r\n            year={movie.release_date && movie.release_date.substring(0,4)}\r\n            isMovie={true}\r\n          />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Movies\">\r\n          {popular.map(movie => (\r\n          <Poster \r\n            key={movie.id}\r\n            id={movie.id}\r\n            imageUrl={movie.poster_path} \r\n            title={movie.original_title}\r\n            rating={movie.vote_average}\r\n            year={movie.release_date && movie.release_date.substring(0,4)}\r\n            isMovie={true}\r\n          />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array, \r\n  upcoming: PropTypes.array, \r\n  popular: PropTypes.array, \r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default HomePresenter;\r\n\r\n","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;","import { movieApi } from 'api';\r\nimport React from 'react';\r\nimport HomePresenter from './HomePresenter';\r\n\r\nexport default class extends React.Component{\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null, \r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  render() {\r\n    const {nowPlaying, upcoming, popular, error, loading} = this.state ;\r\n    return (\r\n      <HomePresenter \r\n        nowPlaying={nowPlaying} \r\n        upcoming={upcoming} \r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try{\r\n      const {data:{results : nowPlaying}} = await movieApi.nowPlaying();\r\n      const {data:{results : upcoming}} = await movieApi.upcoming();\r\n      const {data:{results : popular}} = await movieApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      });\r\n    }catch{\r\n      this.setState({\r\n        error: \"Can't find movies information.\"\r\n      });\r\n    }finally{ \r\n      this.setState({ //PageTransitionEvent\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => (\r\n<>\r\n  <Helmet>\r\n    <title>TV Shows | Nomflix</title>\r\n  </Helmet>\r\n  {loading? (<Loader />) : (\r\n  <Container>\r\n   {topRated && topRated.length > 0 && (\r\n     <Section title=\"Top Rated Shows\">\r\n      {topRated.map(show => (\r\n      <Poster \r\n        key={show.id}\r\n        id={show.id}\r\n        imageUrl={show.poster_path} \r\n        title={show.original_name}\r\n        rating={show.vote_average}\r\n        year={show.first_air_date && show.first_air_date.substring(0,4)}\r\n      />\r\n    ))}\r\n     </Section>\r\n   )}\r\n   {popular && popular.length > 0 && (\r\n     <Section title=\"Popular Shows\">\r\n      {popular.map(show => (\r\n      <Poster \r\n        key={show.id}\r\n        id={show.id}\r\n        imageUrl={show.poster_path} \r\n        title={show.original_name}\r\n        rating={show.vote_average}\r\n        year={show.first_air_date && show.first_air_date.substring(0,4)}\r\n      />\r\n      ))}\r\n     </Section>\r\n   )}\r\n   {airingToday && airingToday.length > 0 && (\r\n     <Section title=\"Airing Today\">\r\n      {airingToday.map(show => (\r\n      <Poster \r\n        key={show.id}\r\n        id={show.id}\r\n        imageUrl={show.poster_path} \r\n        title={show.original_name}\r\n        rating={show.vote_average}\r\n        year={show.first_air_date && show.first_air_date.substring(0,4)}\r\n      />\r\n      ))}\r\n     </Section>\r\n   )}\r\n  {error && <Message color=\"#e74c3c\" text={error} />}\r\n </Container> \r\n  )}\r\n</>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array, \r\n  popular: PropTypes.array, \r\n  airingToday: PropTypes.array, \r\n  loading: PropTypes.bool.isRequired, \r\n  error: PropTypes.string \r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\"\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from 'react-helmet';\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({movieResults, tvResults, searchTerm, error, loading, handleSubmit, updateTerm}) => (\r\n<Container>\r\n  <Helmet>\r\n    <title>Search | Nomflix</title>\r\n  </Helmet>\r\n  <Form onSubmit={handleSubmit}>\r\n    <Input \r\n      placeholder=\"Search Movies or TV Shows...\" \r\n      value={searchTerm}\r\n      onChange={updateTerm}\r\n    />\r\n  </Form>\r\n  {loading? (<Loader />) : (\r\n    <>\r\n      {movieResults && movieResults.length > 0 && (\r\n        <Section title=\"Movie Results\">\r\n          {movieResults.map(movie => (\r\n            <Poster \r\n            key={movie.id}\r\n            id={movie.id}\r\n            imageUrl={movie.poster_path} \r\n            title={movie.original_title}\r\n            rating={movie.vote_average}\r\n            year={movie.release_date && movie.release_date.substring(0,4)}\r\n            isMovie={true}\r\n          />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {tvResults && tvResults.length > 0 && (\r\n        <Section title=\"TV Show Results\">\r\n          {tvResults.map(show => (\r\n            <Poster \r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path} \r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date && show.first_air_date.substring(0,4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n      {tvResults && \r\n        movieResults && \r\n        tvResults.length === 0 && \r\n        movieResults.length === 0 && (\r\n        <Message text={`Nothing found for: ${searchTerm}`} color=\"#95a5a6\" />\r\n      )}\r\n    </>)\r\n  }\r\n</Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array, \r\n  tvResults: PropTypes.array, \r\n  searchTerm: PropTypes.string, \r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import { movieApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component{\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const {searchTerm} = this.state;\r\n      if(searchTerm !== \"\"){\r\n        this.searchByTerm();\r\n      }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {target: {value}} = event;\r\n    \r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  }\r\n\r\n  searchByTerm = async() => {\r\n    const {searchTerm} = this.state;\r\n    this.setState({ loading: true });\r\n    try{\r\n      const {data : {results : movieResults}} = await movieApi.search(searchTerm);\r\n      const {data : {results : tvResults}} = await tvApi.search(searchTerm);\r\n      this.setState({movieResults, tvResults});\r\n    }catch{\r\n      this.setState({error: \"Can't find results.\"});\r\n    }finally{\r\n      this.setState({loading: false});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {movieResults, tvResults, searchTerm, error, loading} = this.state;\r\n    return (\r\n      <SearchPresenter \r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n        />\r\n    );\r\n  }\r\n};","import React from \"react\";\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid ${props => props.current? \"#3498db\" : \"transparent\"};\r\n  transition: border-bottom .5s ease;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({location : {pathname}}) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from 'react-helmet';\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin-bottom: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span`\r\n\r\n`;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({result, error, loading}) => \r\n  loading? (\r\n  <>\r\n    <Helmet>\r\n      <title>Loading | Nomflix</title>\r\n    </Helmet>\r\n    <Loader />\r\n  </>) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{result.original_title? result.original_title : result.original_name}{\" \"} | Nomflix</title>\r\n      </Helmet>\r\n      <Backdrop \r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover \r\n          bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"assets/noPosterSmall.png\")}\r\n        />\r\n        <Data>\r\n          <Title>{result.original_title? result.original_title : result.original_name}</Title>\r\n          <ItemContainer>\r\n            <Item>{result.release_date? result.release_date.substring(0,4) : result.first_air_date.substring(0,4)}</Item>\r\n            <Divider>*</Divider>\r\n            <Item>{result.runtime? result.runtime: result.episode_run_time}min</Item>\r\n            <Divider>*</Divider>\r\n            <Item>{result.genres && result.genres.map((genre, index) => \r\n                    index===result.genres.length-1 ? genre.name : `${genre.name} /`)}</Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object, \r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;\r\n\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import { movieApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    const {location : {pathname}} = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {params: {id}},\r\n      history : {push}\r\n    } = this.props;\r\n    const {isMovie} = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)){\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try{\r\n      if(isMovie){\r\n        ({data: result} = await movieApi.movieDetail(parsedId));\r\n      }else{\r\n        ({data: result} = await tvApi.showDetail(parsedId));\r\n      };\r\n    }catch{\r\n      this.setState({error: \"Can't find anything.\"});\r\n    }finally{\r\n      this.setState({loading: false, result});\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {result, error, loading} = this.state;\r\n    console.log(result);\r\n    return (\r\n      <DetailPresenter \r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n        />\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"../Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from 'Components/Header';\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n    <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);","import {createGlobalStyle} from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n  ${reset};\r\n  a{\r\n      text-decoration:none;\r\n      color:inherit;\r\n  }\r\n  *{\r\n      box-sizing:border-box;\r\n  }\r\n  body{\r\n      font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n      font-size:12px;\r\n      background-color:rgba(20, 20, 20, 1);\r\n      color:white;\r\n      padding-top:80px;\r\n  }\r\n`;\r\n\r\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from './GlobalStyles';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}